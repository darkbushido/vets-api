name: Upload Bundle Cache
on: [push]

jobs:
  upload_bundle_cache:
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v1
      - uses: actions/checkout@v2
        with:
          ref: master

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Setup Environment
        run: |
          echo "DOCKER_USER_ID=$(id -u)" >> $GITHUB_ENV

      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          build-args: |
            BUNDLE_ENTERPRISE__CONTRIBSYS__COM=${{ env.BUNDLE_ENTERPRISE__CONTRIBSYS__COM }}
            USER_ID=${{ env.DOCKER_USER_ID }}
          context: .
          push: false
          load: true
          tags: vets-api:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache into place # This is to prevent the buildx cache from ballooning
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Copy cache out of container
        run: |
          docker-compose run --service-ports web
          echo "DOCKER_CONTAINER_ID=$(docker ps --filter "ancestor=vets-api:latest " -q)" >> $GITHUB_ENV
          docker cp ${{ env.DOCKER_CONTAINER_ID }}:/usr/local/bundle/cache - | bzip2 > tmp/bundle_cache.tar.bz2

